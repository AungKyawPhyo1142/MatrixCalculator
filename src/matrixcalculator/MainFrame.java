/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matrixcalculator;

/**
 *
 * @author Lenovo
 */
import javax.swing.*;
import java.awt.*;
import Matrix.Matrices;

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    String text = "";
    int type = 0;

    int rowsA = 0;
    int colsA = 0;
    int rowsB = 0;
    int colsB = 0;

    public static float[][] matrixA;
    public static float[][] matrixB;

    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        exit_label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        choice = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        rowsA_txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        colsA_txt = new javax.swing.JTextField();
        rowB_lb = new javax.swing.JLabel();
        rowsB_txt = new javax.swing.JTextField();
        colsB_txt = new javax.swing.JTextField();
        colB_lb = new javax.swing.JLabel();
        submit_btn = new javax.swing.JButton();
        clear_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(7, 30, 61));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(238, 197, 86), 1, true));
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.BorderLayout());

        ta.setEditable(false);
        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 430, 260));

        exit_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete_20px.png"))); // NOI18N
        exit_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_labelMouseClicked(evt);
            }
        });
        jPanel1.add(exit_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, 30));

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(238, 197, 86));
        jLabel2.setText("Matrix Calculator");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 30));

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(238, 197, 86), 1, true));
        jPanel3.setOpaque(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        choice.setBackground(new java.awt.Color(7, 30, 61));
        choice.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        choice.setForeground(new java.awt.Color(238, 197, 86));
        choice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adding Matrices", "Substracting Matrices", "Multiplying Matrices", "Inverse the Matrix", "Transpose the Matrix" }));
        choice.setFocusable(false);
        choice.setOpaque(false);
        choice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choiceItemStateChanged(evt);
            }
        });
        jPanel3.add(choice, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(238, 197, 86));
        jLabel6.setText("Rows of A :");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 100, 30));

        rowsA_txt.setBackground(new java.awt.Color(7, 30, 61));
        rowsA_txt.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        rowsA_txt.setForeground(new java.awt.Color(238, 197, 86));
        rowsA_txt.setText("eg.3");
        rowsA_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rowsA_txtMouseClicked(evt);
            }
        });
        jPanel3.add(rowsA_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 70, 30));

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(238, 197, 86));
        jLabel7.setText("Cols of A :");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 100, 30));

        colsA_txt.setBackground(new java.awt.Color(7, 30, 61));
        colsA_txt.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        colsA_txt.setForeground(new java.awt.Color(238, 197, 86));
        colsA_txt.setText("eg.2");
        colsA_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colsA_txtMouseClicked(evt);
            }
        });
        jPanel3.add(colsA_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 70, 30));

        rowB_lb.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        rowB_lb.setForeground(new java.awt.Color(238, 197, 86));
        rowB_lb.setText("Rows of B :");
        jPanel3.add(rowB_lb, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 100, 30));

        rowsB_txt.setBackground(new java.awt.Color(7, 30, 61));
        rowsB_txt.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        rowsB_txt.setForeground(new java.awt.Color(238, 197, 86));
        rowsB_txt.setText("eg.3");
        rowsB_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rowsB_txtMouseClicked(evt);
            }
        });
        jPanel3.add(rowsB_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 70, 30));

        colsB_txt.setBackground(new java.awt.Color(7, 30, 61));
        colsB_txt.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        colsB_txt.setForeground(new java.awt.Color(238, 197, 86));
        colsB_txt.setText("eg.2");
        colsB_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colsB_txtMouseClicked(evt);
            }
        });
        jPanel3.add(colsB_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 70, 30));

        colB_lb.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        colB_lb.setForeground(new java.awt.Color(238, 197, 86));
        colB_lb.setText("Cols of B :");
        jPanel3.add(colB_lb, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 100, 30));

        submit_btn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        submit_btn.setForeground(new java.awt.Color(7, 30, 61));
        submit_btn.setText("Submit");
        submit_btn.setFocusable(false);
        submit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_btnActionPerformed(evt);
            }
        });
        jPanel3.add(submit_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 90, 30));

        clear_btn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        clear_btn.setForeground(new java.awt.Color(7, 30, 61));
        clear_btn.setText("Clear");
        clear_btn.setFocusable(false);
        clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_btnActionPerformed(evt);
            }
        });
        jPanel3.add(clear_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 70, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 190, 260));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 330));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exit_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_labelMouseClicked

        System.exit(0);

    }//GEN-LAST:event_exit_labelMouseClicked

    private void choiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choiceItemStateChanged

        type = choice.getSelectedIndex();

        if (type == 3 || type == 4) {
            rowB_lb.setVisible(false);
            colB_lb.setVisible(false);
            rowsB_txt.setVisible(false);
            colsB_txt.setVisible(false);
        } else {
            rowB_lb.setVisible(true);
            colB_lb.setVisible(true);
            rowsB_txt.setVisible(true);
            colsB_txt.setVisible(true);
        }


    }//GEN-LAST:event_choiceItemStateChanged

    private void submit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_btnActionPerformed

//        rowsB= Integer.parseInt(rowsB_txt.getText());
        //      colsB= Integer.parseInt(colsB_txt.getText());
        if (type == 3 || type == 4) {

            rowsA = Integer.parseInt(rowsA_txt.getText());
            colsA = Integer.parseInt(colsA_txt.getText());

            matrixA = new float[rowsA][colsA];
            matrixA = Matrices.getMatrix(rowsA, colsA);
            text = "\n\tMatrix-A\n\t-----------\n\t";
            for (int i = 0; i < matrixA.length; i++) {

                for (int j = 0; j < matrixA[0].length; j++) {

                    text += "" + matrixA[i][j] + "\t";

                } // j
                text += "\n\t";

            }//i

            ta.setText(text);

        } // type 3 4
        else {

            rowsA = Integer.parseInt(rowsA_txt.getText());
            colsA = Integer.parseInt(colsA_txt.getText());
            rowsB = Integer.parseInt(rowsB_txt.getText());
            colsB = Integer.parseInt(colsB_txt.getText());

            matrixA = new float[rowsA][colsA];
            matrixA = Matrices.getMatrix(rowsA, colsA);
            matrixB = new float[rowsB][colsB];
            matrixB = Matrices.getMatrix(rowsB, colsB);
            text += "\n\tMatrix-A\n\t-----------\n\t";

            for (int i = 0; i < matrixA.length; i++) {

                for (int j = 0; j < matrixA[0].length; j++) {

                    text += "" + matrixA[i][j] + "\t";

                } // j
                text += "\n\t";
            }//i

            text += "\n\n\tMatrix-B\n\t-----------\n\t";
            for (int i = 0; i < matrixB.length; i++) {

                for (int j = 0; j < matrixB[0].length; j++) {

                    text += "" + matrixB[i][j] + "\t";

                } // j
                text += "\n\t";
            }//i

            ta.setText(text);

        } // type 1 2

        if (type == 0) {

            float[][] result = Matrices.Adding_Matrices(matrixA, matrixB);

            text += "\n\n\tAdding Matrix-A and Matrix-B\n\t---------------------------------------\n\t";

            for (int i = 0; i < result.length; i++) {

                for (int j = 0; j < result[0].length; j++) {

                    text += "" + result[i][j] + "\t";

                } // j
                text += "\n\t";
            }//i

            ta.setText(text);

        } // adding

        if (type == 1) {

            float[][] result = Matrices.Substracting_Matrices(matrixA, matrixB);

            text += "\n\n\tSubstracting Matrix-A and Matrix-B\n\t----------------------------------------------\n\t";

            for (int i = 0; i < result.length; i++) {

                for (int j = 0; j < result[0].length; j++) {

                    text += "" + result[i][j] + "\t";

                } // j
                text += "\n\t";
            }//i

            ta.setText(text);

        } // substract
        
        if (type == 2) {

            float[][] result = Matrices.Multiply_Matrices(matrixA, matrixB);

            text += "\n\n\tMultiplying Matrix-A and Matrix-B\n\t----------------------------------------------\n\t";

            for (int i = 0; i < result.length; i++) {

                for (int j = 0; j < result[0].length; j++) {

                    text += "" + result[i][j] + "\t";

                } // j
                text += "\n\t";
            }//i

            ta.setText(text);

        } // multiply

        if (type == 3) {

            float[][] result = Matrices.InverseMatrix(matrixA);

            text += "\n\n\tInverse of Matrix-A\n\t------------------------------\n\t";

            for (int i = 0; i < result.length; i++) {

                for (int j = 0; j < result[0].length; j++) {

                    text += "" + result[i][j] + "\t";

                } // j
                text += "\n\t";
            }//i

            ta.setText(text);

        } // inverse

        if (type == 4) {

            float[][] result = Matrices.Transpose_Matrix(matrixA);

            text += "\n\n\tTranspose of Matrix-A\n\t------------------------------\n\t";

            for (int i = 0; i < result.length; i++) {

                for (int j = 0; j < result[0].length; j++) {

                    text += "" + result[i][j] + "\t";

                } // j
                text += "\n\t";
            }//i

            ta.setText(text);

        } // transpose
        

    }//GEN-LAST:event_submit_btnActionPerformed

    private void rowsA_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rowsA_txtMouseClicked

        rowsA_txt.setText("");

    }//GEN-LAST:event_rowsA_txtMouseClicked

    private void colsA_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colsA_txtMouseClicked

        colsA_txt.setText("");

    }//GEN-LAST:event_colsA_txtMouseClicked

    private void rowsB_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rowsB_txtMouseClicked

        rowsB_txt.setText("");

    }//GEN-LAST:event_rowsB_txtMouseClicked

    private void colsB_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colsB_txtMouseClicked

        colsB_txt.setText("");

    }//GEN-LAST:event_colsB_txtMouseClicked

    private void clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_btnActionPerformed

        rowsA=0;
        colsA=0;
        rowsB=0;
        colsB=0;
        
        ta.setText(null);
        rowsA_txt.setText("eg.2");
        colsA_txt.setText("eg.3");
        rowsB_txt.setText("eg.2");
        colsB_txt.setText("eg.3");
        choice.setSelectedIndex(0);
        
    }//GEN-LAST:event_clear_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> choice;
    private javax.swing.JButton clear_btn;
    private javax.swing.JLabel colB_lb;
    private javax.swing.JTextField colsA_txt;
    private javax.swing.JTextField colsB_txt;
    private javax.swing.JLabel exit_label;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rowB_lb;
    private javax.swing.JTextField rowsA_txt;
    private javax.swing.JTextField rowsB_txt;
    private javax.swing.JButton submit_btn;
    public static javax.swing.JTextArea ta;
    // End of variables declaration//GEN-END:variables
}
